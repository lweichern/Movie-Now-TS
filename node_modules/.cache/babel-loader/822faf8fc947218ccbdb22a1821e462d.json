{"ast":null,"code":"var convertTime=function convertTime(time){var hours=Math.floor(time/60);var minutes=time%60;return\"\".concat(hours,\"hr \").concat(minutes,\"min\");};// Convert a number to money formatting\nvar convertMoney=function convertMoney(money){var formatter=new Intl.NumberFormat(\"en-US\",{style:\"currency\",currency:\"USD\",minimumFractionDigits:0});return formatter.format(money);};var convertAge=function convertAge(birthdate){var today=new Date();var thisYear=today.getFullYear();var hyphenPosition=birthdate.indexOf(\"-\");var birthYear=parseInt(birthdate.slice(0,hyphenPosition));var age=thisYear-birthYear;return age.toString();};export default{convertTime:convertTime,convertMoney:convertMoney,convertAge:convertAge};","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/MovieNow-TS/src/Calculations.ts"],"names":["convertTime","time","hours","Math","floor","minutes","convertMoney","money","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","format","convertAge","birthdate","today","Date","thisYear","getFullYear","hyphenPosition","indexOf","birthYear","parseInt","slice","age","toString"],"mappings":"AAAA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAkB,CACpC,GAAMC,CAAAA,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWH,IAAI,CAAG,EAAlB,CAAd,CAEA,GAAMI,CAAAA,OAAO,CAAGJ,IAAI,CAAG,EAAvB,CAEA,gBAAUC,KAAV,eAAqBG,OAArB,QACD,CAND,CAQA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAmB,CACtC,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,IAAI,CAACC,YAAT,CAAsB,OAAtB,CAA+B,CAC/CC,KAAK,CAAE,UADwC,CAE/CC,QAAQ,CAAE,KAFqC,CAG/CC,qBAAqB,CAAE,CAHwB,CAA/B,CAAlB,CAKA,MAAOL,CAAAA,SAAS,CAACM,MAAV,CAAiBP,KAAjB,CAAP,CACD,CAPD,CASA,GAAMQ,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,SAAD,CAAuB,CACxC,GAAMC,CAAAA,KAAK,CAAG,GAAIC,CAAAA,IAAJ,EAAd,CACA,GAAMC,CAAAA,QAAQ,CAAGF,KAAK,CAACG,WAAN,EAAjB,CACA,GAAMC,CAAAA,cAAc,CAAGL,SAAS,CAACM,OAAV,CAAkB,GAAlB,CAAvB,CACA,GAAMC,CAAAA,SAAS,CAAGC,QAAQ,CAACR,SAAS,CAACS,KAAV,CAAgB,CAAhB,CAAmBJ,cAAnB,CAAD,CAA1B,CACA,GAAMK,CAAAA,GAAG,CAAGP,QAAQ,CAAGI,SAAvB,CAEA,MAAOG,CAAAA,GAAG,CAACC,QAAJ,EAAP,CACD,CARD,CAUA,cAAe,CAAE3B,WAAW,CAAXA,WAAF,CAAeM,YAAY,CAAZA,YAAf,CAA6BS,UAAU,CAAVA,UAA7B,CAAf","sourcesContent":["const convertTime = (time: number) => {\r\n  const hours = Math.floor(time / 60);\r\n\r\n  const minutes = time % 60;\r\n\r\n  return `${hours}hr ${minutes}min`;\r\n};\r\n\r\n// Convert a number to money formatting\r\nconst convertMoney = (money: number) => {\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n};\r\n\r\nconst convertAge = (birthdate: string) => {\r\n  const today = new Date();\r\n  const thisYear = today.getFullYear();\r\n  const hyphenPosition = birthdate.indexOf(\"-\");\r\n  const birthYear = parseInt(birthdate.slice(0, hyphenPosition));\r\n  const age = thisYear - birthYear;\r\n\r\n  return age.toString();\r\n};\r\n\r\nexport default { convertTime, convertMoney, convertAge };\r\n"]},"metadata":{},"sourceType":"module"}