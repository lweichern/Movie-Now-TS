{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React Course\\\\Project\\\\ReactWithTypescript\\\\MovieApp\\\\movies-app\\\\src\\\\Components\\\\Common\\\\Grid\\\\Grid.tsx\";\nimport React from \"react\";\nimport MovieCards from \"../../MoviesPage/MovieCards/MovieCards\";\nimport { HeaderTitle } from \"./Grid.styled\";\nimport { Flex } from \"../../../Styles/CommonStyles/Flex.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Grid = _ref => {\n  let {\n    headerTitle,\n    movieList,\n    castList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movieList && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderTitle, {\n        children: headerTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        style: {\n          alignItems: \"stretch\"\n        },\n        layout: true,\n        children: movieList.length !== 0 && movieList.map(item => {\n          return /*#__PURE__*/_jsxDEV(MovieCards, {\n            movie: item\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 24\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/ReactWithTypescript/MovieApp/movies-app/src/Components/Common/Grid/Grid.tsx"],"names":["React","MovieCards","HeaderTitle","Flex","Grid","headerTitle","movieList","castList","alignItems","length","map","item","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,SAAwBC,WAAxB,QAA2C,eAA3C;AACA,SAASC,IAAT,QAAqB,0CAArB;;;;AAUA,MAAMC,IAAsB,GAAG,QAA0C;AAAA,MAAzC;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,GAAyC;AACvE,sBACE;AAAA,cACGD,SAAS,iBACR;AAAA,8BACE,QAAC,WAAD;AAAA,kBAAcD;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEG,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAwC,QAAA,MAAM,MAA9C;AAAA,kBACGF,SAAS,CAACG,MAAV,KAAqB,CAArB,IACCH,SAAS,CAACI,GAAV,CAAeC,IAAD,IAAU;AACtB,8BAAO,QAAC,UAAD;AAA0B,YAAA,KAAK,EAAEA;AAAjC,aAAiBA,IAAI,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5BD;;KAAMR,I;AA8BN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\r\nimport MovieCards from \"../../MoviesPage/MovieCards/MovieCards\";\r\nimport { GridContainer, HeaderTitle } from \"./Grid.styled\";\r\nimport { Flex } from \"../../../Styles/CommonStyles/Flex.styled\";\r\nimport { CreditsState, MovieState } from \"../../../Pages/Home\";\r\n// import ActorCards from \"../../components/MovieDetails/ActorCards/ActorCards\";\r\n\r\ntype IProps = {\r\n  headerTitle: string;\r\n  movieList: MovieState[];\r\n  castList?: CreditsState;\r\n};\r\n\r\nconst Grid: React.FC<IProps> = ({ headerTitle, movieList, castList }) => {\r\n  return (\r\n    <div>\r\n      {movieList && (\r\n        <>\r\n          <HeaderTitle>{headerTitle}</HeaderTitle>\r\n          <Flex style={{ alignItems: \"stretch\" }} layout>\r\n            {movieList.length !== 0 &&\r\n              movieList.map((item) => {\r\n                return <MovieCards key={item.id} movie={item} />;\r\n              })}\r\n          </Flex>\r\n        </>\r\n      )}\r\n\r\n      {/* {castList && (\r\n        <>\r\n          <HeaderTitle>{headerTitle}</HeaderTitle>\r\n          <GridContainer>\r\n            {castList &&\r\n              castList.cast.map((cast) => {\r\n                return <ActorCards key={cast.id} profile={cast} />;\r\n              })}\r\n          </GridContainer>\r\n        </>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Grid;\r\n"]},"metadata":{},"sourceType":"module"}