{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React Course\\\\Project\\\\ReactWithTypescript\\\\MovieApp\\\\movies-app\\\\src\\\\Components\\\\HomePage\\\\Carousel\\\\Carousel.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Title, SwiperImage, SwiperMovieTitleContainer, SwiperMovieTitle, SwiperSlideContainer } from \"./Carousel.styled\";\nimport { useTheme } from \"styled-components\";\n// Import Swiper styles\nimport \"swiper/css\";\nimport \"swiper/css/lazy\";\nimport \"swiper/css/pagination\";\nimport \"swiper/css/navigation\";\nimport { Lazy, Pagination, Navigation, Autoplay } from \"swiper\";\nimport api_details from \"../../../API_Details\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Carousel = _ref => {\n  _s();\n\n  let {\n    movieList,\n    carouselTitle,\n    autoplay\n  } = _ref;\n  const [stopCarousel, setStopCarousel] = useState(false);\n  const swiperRef = useRef(null); // Use theme from App.js\n\n  const theme = useTheme();\n  console.log(theme); // Stop and start carousel when mouse hover\n\n  useEffect(() => {// if (autoplay) {\n    //   if (stopCarousel) {\n    //     swiperRef.current.swiper.autoplay.stop();\n    //   } else {\n    //     swiperRef.current.swiper.autoplay.start();\n    //   }\n    // }\n  }, [stopCarousel]); // Framer motion variants\n\n  const imageVariants = {\n    rest: {\n      opacity: 0.6\n    },\n    hover: {\n      opacity: 1,\n      transition: {\n        duration: 0.4,\n        type: \"tween\",\n        ease: \"easeOut\"\n      }\n    }\n  };\n  const textVariants = {\n    rest: {\n      opacity: 1,\n      y: \"-50%\",\n      x: \"-50%\"\n    },\n    hover: {\n      opacity: 0,\n      y: \"-30%\",\n      x: \"-50%\",\n      transition: {\n        duration: 0.4,\n        type: \"tween\",\n        ease: \"easeOut\"\n      }\n    }\n  }; //   const SwiperStyles = {\n  //     \"--swiper-navigation-color\": theme.colors.content1\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: carouselTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n      style: {\n        background: theme.colors.content1,\n        \"--swiper-pagination-color\": theme.colors.content1\n      },\n      slidesPerView: 1,\n      spaceBetween: 20,\n      loop: true,\n      lazy: true,\n      pagination: {\n        clickable: true\n      },\n      navigation: true,\n      modules: autoplay ? [Lazy, Pagination, Navigation, Autoplay] : [Lazy, Pagination, Navigation],\n      autoplay: {\n        delay: 2500,\n        disableOnInteraction: false\n      },\n      breakpoints: {\n        768: {\n          slidesPerView: 3,\n          spaceBetween: 30,\n          slidesPerGroup: 3\n        }\n      },\n      className: \"mySwiper\" // ref={swiperRef}\n      ,\n      children: movieList.map(movie => {\n        return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n          style: {\n            width: \"33%\"\n          },\n          onMouseOver: () => setStopCarousel(true),\n          onMouseOut: () => setStopCarousel(false),\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/movies/movie-details/${movie.id}`,\n            children: /*#__PURE__*/_jsxDEV(SwiperSlideContainer, {\n              initial: \"rest\",\n              whileHover: \"hover\",\n              animate: \"rest\",\n              children: [/*#__PURE__*/_jsxDEV(SwiperImage, {\n                \"data-src\": `${api_details.IMAGE_BASE_URL}${api_details.BACKDROP_SIZE}${movie.backdrop_path}`,\n                className: \"swiper-lazy\",\n                style: {\n                  width: \"100%\",\n                  overflow: \"visible\"\n                },\n                variants: imageVariants\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SwiperMovieTitleContainer, {\n                variants: textVariants,\n                children: /*#__PURE__*/_jsxDEV(SwiperMovieTitle, {\n                  children: movie.title !== undefined ? movie.title : movie.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"swiper-lazy-preloader swiper-lazy-preloader-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Carousel, \"dfbx0VKGIOxbnIfQHCyshBBsixs=\", false, function () {\n  return [useTheme];\n});\n\n_c = Carousel;\nexport default Carousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/ReactWithTypescript/MovieApp/movies-app/src/Components/HomePage/Carousel/Carousel.tsx"],"names":["React","useEffect","useRef","useState","Swiper","SwiperSlide","Title","SwiperImage","SwiperMovieTitleContainer","SwiperMovieTitle","SwiperSlideContainer","useTheme","Lazy","Pagination","Navigation","Autoplay","api_details","Link","Carousel","movieList","carouselTitle","autoplay","stopCarousel","setStopCarousel","swiperRef","theme","console","log","imageVariants","rest","opacity","hover","transition","duration","type","ease","textVariants","y","x","background","colors","content1","clickable","delay","disableOnInteraction","slidesPerView","spaceBetween","slidesPerGroup","map","movie","width","id","IMAGE_BASE_URL","BACKDROP_SIZE","backdrop_path","overflow","title","undefined","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,cAApC;AACA,SACEC,KADF,EAEEC,WAFF,EAGEC,yBAHF,EAIEC,gBAJF,EAKEC,oBALF,QAMO,mBANP;AAOA,SAAuBC,QAAvB,QAAuC,mBAAvC;AAIA;AACA,OAAO,YAAP;AACA,OAAO,iBAAP;AACA,OAAO,uBAAP;AACA,OAAO,uBAAP;AAGA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,QAAvD;AAEA,OAAOC,WAAP,MAAwB,sBAAxB;AAGA,SAASC,IAAT,QAAqB,kBAArB;;;;AAQA,MAAMC,QAAiC,GAAG,QAIpC;AAAA;;AAAA,MAJqC;AACzCC,IAAAA,SADyC;AAEzCC,IAAAA,aAFyC;AAGzCC,IAAAA;AAHyC,GAIrC;AACJ,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMqB,SAAc,GAAGtB,MAAM,CAAuC,IAAvC,CAA7B,CAFI,CAIJ;;AACA,QAAMuB,KAAgB,GAAGd,QAAQ,EAAjC;AAEAe,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAPI,CASJ;;AACAxB,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GARQ,EAQN,CAACqB,YAAD,CARM,CAAT,CAVI,CAoBJ;;AACA,QAAMM,aAAa,GAAG;AACpBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADc;AAIpBC,IAAAA,KAAK,EAAE;AACLD,MAAAA,OAAO,EAAE,CADJ;AAELE,MAAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAE,GADA;AAEVC,QAAAA,IAAI,EAAE,OAFI;AAGVC,QAAAA,IAAI,EAAE;AAHI;AAFP;AAJa,GAAtB;AAcA,QAAMC,YAAY,GAAG;AACnBP,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE,CADL;AAEJO,MAAAA,CAAC,EAAE,MAFC;AAGJC,MAAAA,CAAC,EAAE;AAHC,KADa;AAMnBP,IAAAA,KAAK,EAAE;AACLD,MAAAA,OAAO,EAAE,CADJ;AAELO,MAAAA,CAAC,EAAE,MAFE;AAGLC,MAAAA,CAAC,EAAE,MAHE;AAILN,MAAAA,UAAU,EAAE;AACVC,QAAAA,QAAQ,EAAE,GADA;AAEVC,QAAAA,IAAI,EAAE,OAFI;AAGVC,QAAAA,IAAI,EAAE;AAHI;AAJP;AANY,GAArB,CAnCI,CAqDJ;AACA;AACA;;AAEA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAA,gBAAQf;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE;AACLmB,QAAAA,UAAU,EAAEd,KAAK,CAACe,MAAN,CAAaC,QADpB;AAEL,qCAA6BhB,KAAK,CAACe,MAAN,CAAaC;AAFrC,OADT;AAKE,MAAA,aAAa,EAAE,CALjB;AAME,MAAA,YAAY,EAAE,EANhB;AAOE,MAAA,IAAI,EAAE,IAPR;AAQE,MAAA,IAAI,EAAE,IARR;AASE,MAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE;AADD,OATd;AAYE,MAAA,UAAU,EAAE,IAZd;AAaE,MAAA,OAAO,EACLrB,QAAQ,GACJ,CAACT,IAAD,EAAOC,UAAP,EAAmBC,UAAnB,EAA+BC,QAA/B,CADI,GAEJ,CAACH,IAAD,EAAOC,UAAP,EAAmBC,UAAnB,CAhBR;AAkBE,MAAA,QAAQ,EAAE;AACR6B,QAAAA,KAAK,EAAE,IADC;AAERC,QAAAA,oBAAoB,EAAE;AAFd,OAlBZ;AAsBE,MAAA,WAAW,EAAE;AACX,aAAK;AACHC,UAAAA,aAAa,EAAE,CADZ;AAEHC,UAAAA,YAAY,EAAE,EAFX;AAGHC,UAAAA,cAAc,EAAE;AAHb;AADM,OAtBf;AA6BE,MAAA,SAAS,EAAC,UA7BZ,CA8BE;AA9BF;AAAA,gBAgCG5B,SAAS,CAAC6B,GAAV,CAAeC,KAAD,IAAW;AACxB,4BACE,QAAC,WAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WADT;AAGE,UAAA,WAAW,EAAE,MAAM3B,eAAe,CAAC,IAAD,CAHpC;AAIE,UAAA,UAAU,EAAE,MAAMA,eAAe,CAAC,KAAD,CAJnC;AAAA,iCAME,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,yBAAwB0B,KAAK,CAACE,EAAG,EAA5C;AAAA,mCACE,QAAC,oBAAD;AACE,cAAA,OAAO,EAAC,MADV;AAEE,cAAA,UAAU,EAAC,OAFb;AAGE,cAAA,OAAO,EAAC,MAHV;AAAA,sCAKE,QAAC,WAAD;AACE,4BAAW,GAAEnC,WAAW,CAACoC,cAAe,GAAEpC,WAAW,CAACqC,aAAc,GAAEJ,KAAK,CAACK,aAAc,EAD5F;AAEE,gBAAA,SAAS,EAAC,aAFZ;AAGE,gBAAA,KAAK,EAAE;AAAEJ,kBAAAA,KAAK,EAAE,MAAT;AAAiBK,kBAAAA,QAAQ,EAAE;AAA3B,iBAHT;AAIE,gBAAA,QAAQ,EAAE3B;AAJZ;AAAA;AAAA;AAAA;AAAA,sBALF,eAWE,QAAC,yBAAD;AAA2B,gBAAA,QAAQ,EAAEQ,YAArC;AAAA,uCACE,QAAC,gBAAD;AAAA,4BACGa,KAAK,CAACO,KAAN,KAAgBC,SAAhB,GAA4BR,KAAK,CAACO,KAAlC,GAA0CP,KAAK,CAACS;AADnD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAXF,eAgBE;AAAK,gBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF,WAEOT,KAAK,CAACE,EAFb;AAAA;AAAA;AAAA;AAAA,gBADF;AA6BD,OA9BA;AAhCH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAqED,CAlID;;GAAMjC,Q;UASqBP,Q;;;KATrBO,Q;AAoIN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport {\r\n  Title,\r\n  SwiperImage,\r\n  SwiperMovieTitleContainer,\r\n  SwiperMovieTitle,\r\n  SwiperSlideContainer,\r\n} from \"./Carousel.styled\";\r\nimport { DefaultTheme, useTheme } from \"styled-components\";\r\nimport { MovieState } from \"../../../Pages/Home\";\r\nimport { ThemeType } from \"../../../App\";\r\n\r\n// Import Swiper styles\r\nimport \"swiper/css\";\r\nimport \"swiper/css/lazy\";\r\nimport \"swiper/css/pagination\";\r\nimport \"swiper/css/navigation\";\r\nimport { SwiperProps } from \"swiper/react\";\r\n\r\nimport { Lazy, Pagination, Navigation, Autoplay } from \"swiper\";\r\n\r\nimport api_details from \"../../../API_Details\";\r\n\r\nimport { Container } from \"../../../Styles/CommonStyles/Container\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype CarouselState = {\r\n  movieList: MovieState[];\r\n  carouselTitle: string;\r\n  autoplay: boolean;\r\n};\r\n\r\nconst Carousel: React.FC<CarouselState> = ({\r\n  movieList,\r\n  carouselTitle,\r\n  autoplay,\r\n}) => {\r\n  const [stopCarousel, setStopCarousel] = useState(false);\r\n  const swiperRef: any = useRef<React.FunctionComponent<SwiperProps>>(null);\r\n\r\n  // Use theme from App.js\r\n  const theme: ThemeType = useTheme();\r\n\r\n  console.log(theme);\r\n\r\n  // Stop and start carousel when mouse hover\r\n  useEffect(() => {\r\n    // if (autoplay) {\r\n    //   if (stopCarousel) {\r\n    //     swiperRef.current.swiper.autoplay.stop();\r\n    //   } else {\r\n    //     swiperRef.current.swiper.autoplay.start();\r\n    //   }\r\n    // }\r\n  }, [stopCarousel]);\r\n\r\n  // Framer motion variants\r\n  const imageVariants = {\r\n    rest: {\r\n      opacity: 0.6,\r\n    },\r\n    hover: {\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.4,\r\n        type: \"tween\",\r\n        ease: \"easeOut\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const textVariants = {\r\n    rest: {\r\n      opacity: 1,\r\n      y: \"-50%\",\r\n      x: \"-50%\",\r\n    },\r\n    hover: {\r\n      opacity: 0,\r\n      y: \"-30%\",\r\n      x: \"-50%\",\r\n      transition: {\r\n        duration: 0.4,\r\n        type: \"tween\",\r\n        ease: \"easeOut\",\r\n      },\r\n    },\r\n  };\r\n\r\n  //   const SwiperStyles = {\r\n  //     \"--swiper-navigation-color\": theme.colors.content1\r\n  //   }\r\n\r\n  return (\r\n    <>\r\n      <Title>{carouselTitle}</Title>\r\n      <Swiper\r\n        style={{\r\n          background: theme.colors.content1,\r\n          \"--swiper-pagination-color\": theme.colors.content1,\r\n        }}\r\n        slidesPerView={1}\r\n        spaceBetween={20}\r\n        loop={true}\r\n        lazy={true}\r\n        pagination={{\r\n          clickable: true,\r\n        }}\r\n        navigation={true}\r\n        modules={\r\n          autoplay\r\n            ? [Lazy, Pagination, Navigation, Autoplay]\r\n            : [Lazy, Pagination, Navigation]\r\n        }\r\n        autoplay={{\r\n          delay: 2500,\r\n          disableOnInteraction: false,\r\n        }}\r\n        breakpoints={{\r\n          768: {\r\n            slidesPerView: 3,\r\n            spaceBetween: 30,\r\n            slidesPerGroup: 3,\r\n          },\r\n        }}\r\n        className=\"mySwiper\"\r\n        // ref={swiperRef}\r\n      >\r\n        {movieList.map((movie) => {\r\n          return (\r\n            <SwiperSlide\r\n              style={{ width: \"33%\" }}\r\n              key={movie.id}\r\n              onMouseOver={() => setStopCarousel(true)}\r\n              onMouseOut={() => setStopCarousel(false)}\r\n            >\r\n              <Link to={`/movies/movie-details/${movie.id}`}>\r\n                <SwiperSlideContainer\r\n                  initial=\"rest\"\r\n                  whileHover=\"hover\"\r\n                  animate=\"rest\"\r\n                >\r\n                  <SwiperImage\r\n                    data-src={`${api_details.IMAGE_BASE_URL}${api_details.BACKDROP_SIZE}${movie.backdrop_path}`}\r\n                    className=\"swiper-lazy\"\r\n                    style={{ width: \"100%\", overflow: \"visible\" }}\r\n                    variants={imageVariants}\r\n                  />\r\n                  <SwiperMovieTitleContainer variants={textVariants}>\r\n                    <SwiperMovieTitle>\r\n                      {movie.title !== undefined ? movie.title : movie.name}\r\n                    </SwiperMovieTitle>\r\n                  </SwiperMovieTitleContainer>\r\n                  <div className=\"swiper-lazy-preloader swiper-lazy-preloader-white\"></div>\r\n                </SwiperSlideContainer>\r\n              </Link>\r\n            </SwiperSlide>\r\n          );\r\n        })}\r\n      </Swiper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Carousel;\r\n"]},"metadata":{},"sourceType":"module"}