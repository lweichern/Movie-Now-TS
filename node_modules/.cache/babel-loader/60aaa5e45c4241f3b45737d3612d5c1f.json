{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React Course\\\\Project\\\\MovieNow-TS\\\\src\\\\Components\\\\SignUpPage\\\\SignUpPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { RightContent, SignUpContainer, SignUpContent, LeftContent, SignUpText } from \"./SignUpPage.styled\"; // import Undraw from \"react-undraw\";\n\nimport { useTheme } from \"styled-components\";\nimport SignUpImage from \"../../undraw/sign-up.svg\"; // Material UI\n\nimport { TextField, Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n// Framer motion\nimport { AnimatePresence } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const theme = useTheme(); //   Undraw.defaultProps.primaryColor = \"#fff\";\n\n  const handleSignUp = e => {\n    e.preventDefault();\n    const usersArray = [];\n    const previousUsers = JSON.parse(window.localStorage.getItem(\"users\"));\n    let localStorageUpdate = true;\n    const userObject = {\n      email: email,\n      username: username,\n      password: password,\n      favoriteMovies: []\n    };\n\n    if (previousUsers == null) {\n      usersArray.push(userObject);\n    } else {\n      previousUsers.map(item => {\n        if (email == item.email || username == item.username) {\n          localStorageUpdate = false;\n          return;\n        } else {\n          usersArray.push(item);\n        }\n      });\n      usersArray.push(userObject);\n    }\n\n    if (password !== confirmPassword) {\n      alert(\"Password not matching!\");\n    } else {\n      if (localStorageUpdate) {\n        window.localStorage.setItem(\"users\", JSON.stringify(usersArray));\n        alert(\"User successfully created!\");\n        setEmail(\"\");\n        setUsername(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n      } else {\n        alert(\"Email or Username has been taken!\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(SignUpContainer, {\n      initial: {\n        x: \"100%\"\n      },\n      animate: {\n        x: 0\n      },\n      exit: {\n        x: \"-100%\"\n      },\n      transition: {\n        delay: 0.5\n      },\n      children: /*#__PURE__*/_jsxDEV(SignUpContent, {\n        layoutId: \"division\",\n        transition: {\n          duration: 0.6\n        },\n        children: [/*#__PURE__*/_jsxDEV(LeftContent, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SignUpImage,\n            style: {\n              height: \"70vh\",\n              width: \"100%\"\n            },\n            alt: \"Sign Up Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RightContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              color: theme.colors.content1\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSignUp,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Email\",\n              variant: \"outlined\",\n              className: \"input\",\n              type: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Username\",\n              variant: \"outlined\",\n              className: \"input\",\n              type: \"text\",\n              value: username,\n              onChange: e => setUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Password\",\n              variant: \"outlined\",\n              className: \"input\",\n              type: \"password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-basic\",\n              label: \"Confirm Password\",\n              variant: \"outlined\",\n              className: \"input\",\n              type: \"password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SignUpText, {\n              children: [\"Already have an account? Sign In\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/sign-in\",\n                style: {\n                  textDecoration: \"underline\"\n                },\n                children: \"Here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              id: \"outlined-basic\",\n              variant: \"outlined\",\n              style: {\n                color: theme.colors.content1,\n                border: `1px solid ${theme.colors.content1}`\n              },\n              type: \"submit\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"8Z3m5cbj9RC47xkrXAYBdgb5rl8=\", false, function () {\n  return [useTheme];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/MovieNow-TS/src/Components/SignUpPage/SignUpPage.tsx"],"names":["React","useState","RightContent","SignUpContainer","SignUpContent","LeftContent","SignUpText","useTheme","SignUpImage","TextField","Button","Link","AnimatePresence","SignUp","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","theme","handleSignUp","e","preventDefault","usersArray","previousUsers","JSON","parse","window","localStorage","getItem","localStorageUpdate","userObject","favoriteMovies","push","map","item","alert","setItem","stringify","x","delay","duration","height","width","color","colors","content1","target","value","textDecoration","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,YADF,EAEEC,eAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,qBANP,C,CAQA;;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,eAAlC;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAGA;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMqB,KAAK,GAAGf,QAAQ,EAAtB,CAN+B,CAQ/B;;AAEA,QAAMgB,YAAY,GAAIC,CAAD,IAAyC;AAC5DA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,UAAU,GAAG,EAAnB;AAEA,UAAMC,aAAa,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAX,CAAtB;AAEA,QAAIC,kBAAkB,GAAG,IAAzB;AAEA,UAAMC,UAAU,GAAG;AACjBpB,MAAAA,KAAK,EAAEA,KADU;AAEjBE,MAAAA,QAAQ,EAAEA,QAFO;AAGjBE,MAAAA,QAAQ,EAAEA,QAHO;AAIjBiB,MAAAA,cAAc,EAAE;AAJC,KAAnB;;AAOA,QAAIR,aAAa,IAAI,IAArB,EAA2B;AACzBD,MAAAA,UAAU,CAACU,IAAX,CAAgBF,UAAhB;AACD,KAFD,MAEO;AACLP,MAAAA,aAAa,CAACU,GAAd,CAAmBC,IAAD,IAAqB;AACrC,YAAIxB,KAAK,IAAIwB,IAAI,CAACxB,KAAd,IAAuBE,QAAQ,IAAIsB,IAAI,CAACtB,QAA5C,EAAsD;AACpDiB,UAAAA,kBAAkB,GAAG,KAArB;AACA;AACD,SAHD,MAGO;AACLP,UAAAA,UAAU,CAACU,IAAX,CAAgBE,IAAhB;AACD;AACF,OAPD;AAQAZ,MAAAA,UAAU,CAACU,IAAX,CAAgBF,UAAhB;AACD;;AAED,QAAIhB,QAAQ,KAAKE,eAAjB,EAAkC;AAChCmB,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACD,KAFD,MAEO;AACL,UAAIN,kBAAJ,EAAwB;AACtBH,QAAAA,MAAM,CAACC,YAAP,CAAoBS,OAApB,CAA4B,OAA5B,EAAqCZ,IAAI,CAACa,SAAL,CAAef,UAAf,CAArC;AACAa,QAAAA,KAAK,CAAC,4BAAD,CAAL;AAEAxB,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,QAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,QAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,OARD,MAQO;AACLkB,QAAAA,KAAK,CAAC,mCAAD,CAAL;AACD;AACF;AACF,GA7CD;;AA+CA,sBACE,QAAC,eAAD;AAAA,2BACE,QAAC,eAAD;AACE,MAAA,OAAO,EAAE;AACPG,QAAAA,CAAC,EAAE;AADI,OADX;AAIE,MAAA,OAAO,EAAE;AACPA,QAAAA,CAAC,EAAE;AADI,OAJX;AAOE,MAAA,IAAI,EAAE;AAAEA,QAAAA,CAAC,EAAE;AAAL,OAPR;AAQE,MAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EAAE;AADG,OARd;AAAA,6BAYE,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAC,UAAxB;AAAmC,QAAA,UAAU,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAA/C;AAAA,gCACE,QAAC,WAAD;AAAA,iCACE;AACE,YAAA,GAAG,EAAEpC,WADP;AAEE,YAAA,KAAK,EAAE;AAAEqC,cAAAA,MAAM,EAAE,MAAV;AAAkBC,cAAAA,KAAK,EAAE;AAAzB,aAFT;AAGE,YAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,YAAD;AAAA,kCACE;AAAI,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAGzB,KAAD,CAAe0B,MAAf,CAAsBC;AAA/B,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,QAAQ,EAAE1B,YAAhB;AAAA,oCACE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,gBADL;AAEE,cAAA,KAAK,EAAC,OAFR;AAGE,cAAA,OAAO,EAAC,UAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,IAAI,EAAC,OALP;AAME,cAAA,KAAK,EAAET,KANT;AAOE,cAAA,QAAQ,EAAGU,CAAD,IAAOT,QAAQ,CAACS,CAAC,CAAC0B,MAAF,CAASC,KAAV;AAP3B;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,gBADL;AAEE,cAAA,KAAK,EAAC,UAFR;AAGE,cAAA,OAAO,EAAC,UAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,IAAI,EAAC,MALP;AAME,cAAA,KAAK,EAAEnC,QANT;AAOE,cAAA,QAAQ,EAAGQ,CAAD,IAAOP,WAAW,CAACO,CAAC,CAAC0B,MAAF,CAASC,KAAV;AAP9B;AAAA;AAAA;AAAA;AAAA,oBAXF,eAqBE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,gBADL;AAEE,cAAA,KAAK,EAAC,UAFR;AAGE,cAAA,OAAO,EAAC,UAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,IAAI,EAAC,UALP;AAME,cAAA,KAAK,EAAEjC,QANT;AAOE,cAAA,QAAQ,EAAGM,CAAD,IAAOL,WAAW,CAACK,CAAC,CAAC0B,MAAF,CAASC,KAAV;AAP9B;AAAA;AAAA;AAAA;AAAA,oBArBF,eA+BE,QAAC,SAAD;AACE,cAAA,EAAE,EAAC,gBADL;AAEE,cAAA,KAAK,EAAC,kBAFR;AAGE,cAAA,OAAO,EAAC,UAHV;AAIE,cAAA,SAAS,EAAC,OAJZ;AAKE,cAAA,IAAI,EAAC,UALP;AAME,cAAA,KAAK,EAAE/B,eANT;AAOE,cAAA,QAAQ,EAAGI,CAAD,IAAOH,kBAAkB,CAACG,CAAC,CAAC0B,MAAF,CAASC,KAAV;AAPrC;AAAA;AAAA;AAAA;AAAA,oBA/BF,eAwCE,QAAC,UAAD;AAAA,6DACmC,GADnC,eAEE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAE,UAAV;AAAsB,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,cAAc,EAAE;AAAlB,iBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxCF,eA8CE,QAAC,MAAD;AACE,cAAA,EAAE,EAAC,gBADL;AAEE,cAAA,OAAO,EAAC,UAFV;AAGE,cAAA,KAAK,EAAE;AACLL,gBAAAA,KAAK,EAAGzB,KAAD,CAAe0B,MAAf,CAAsBC,QADxB;AAELI,gBAAAA,MAAM,EAAG,aAAa/B,KAAD,CAAe0B,MAAf,CAAsBC,QAAS;AAF/C,eAHT;AAOE,cAAA,IAAI,EAAC,QAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAZF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuFD;;GAhJuBpC,M;UAMRN,Q;;;KANQM,M","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  RightContent,\r\n  SignUpContainer,\r\n  SignUpContent,\r\n  LeftContent,\r\n  SignUpText,\r\n} from \"./SignUpPage.styled\";\r\n\r\n// import Undraw from \"react-undraw\";\r\nimport { useTheme } from \"styled-components\";\r\nimport SignUpImage from \"../../undraw/sign-up.svg\";\r\n\r\n// Material UI\r\nimport { TextField, Button } from \"@mui/material\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserState } from \"../Common/Navbar/Navbar\";\r\n\r\n// Framer motion\r\nimport { AnimatePresence } from \"framer-motion\";\r\n\r\nexport default function SignUp() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const theme = useTheme();\r\n\r\n  //   Undraw.defaultProps.primaryColor = \"#fff\";\r\n\r\n  const handleSignUp = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    const usersArray = [];\r\n\r\n    const previousUsers = JSON.parse(window.localStorage.getItem(\"users\")!);\r\n\r\n    let localStorageUpdate = true;\r\n\r\n    const userObject = {\r\n      email: email,\r\n      username: username,\r\n      password: password,\r\n      favoriteMovies: [],\r\n    };\r\n\r\n    if (previousUsers == null) {\r\n      usersArray.push(userObject);\r\n    } else {\r\n      previousUsers.map((item: UserState) => {\r\n        if (email == item.email || username == item.username) {\r\n          localStorageUpdate = false;\r\n          return;\r\n        } else {\r\n          usersArray.push(item);\r\n        }\r\n      });\r\n      usersArray.push(userObject);\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      alert(\"Password not matching!\");\r\n    } else {\r\n      if (localStorageUpdate) {\r\n        window.localStorage.setItem(\"users\", JSON.stringify(usersArray));\r\n        alert(\"User successfully created!\");\r\n\r\n        setEmail(\"\");\r\n        setUsername(\"\");\r\n        setPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n      } else {\r\n        alert(\"Email or Username has been taken!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <SignUpContainer\r\n        initial={{\r\n          x: \"100%\",\r\n        }}\r\n        animate={{\r\n          x: 0,\r\n        }}\r\n        exit={{ x: \"-100%\" }}\r\n        transition={{\r\n          delay: 0.5,\r\n        }}\r\n      >\r\n        <SignUpContent layoutId=\"division\" transition={{ duration: 0.6 }}>\r\n          <LeftContent>\r\n            <img\r\n              src={SignUpImage}\r\n              style={{ height: \"70vh\", width: \"100%\" }}\r\n              alt=\"Sign Up Image\"\r\n            />\r\n          </LeftContent>\r\n          <RightContent>\r\n            <h1 style={{ color: (theme as any).colors.content1 }}>Sign Up</h1>\r\n            <form onSubmit={handleSignUp}>\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                className=\"input\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Username\"\r\n                variant=\"outlined\"\r\n                className=\"input\"\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                className=\"input\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                id=\"outlined-basic\"\r\n                label=\"Confirm Password\"\r\n                variant=\"outlined\"\r\n                className=\"input\"\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                onChange={(e) => setConfirmPassword(e.target.value)}\r\n              />\r\n              <SignUpText>\r\n                Already have an account? Sign In{\" \"}\r\n                <Link to={\"/sign-in\"} style={{ textDecoration: \"underline\" }}>\r\n                  Here\r\n                </Link>\r\n              </SignUpText>\r\n              <Button\r\n                id=\"outlined-basic\"\r\n                variant=\"outlined\"\r\n                style={{\r\n                  color: (theme as any).colors.content1,\r\n                  border: `1px solid ${(theme as any).colors.content1}`,\r\n                }}\r\n                type=\"submit\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n            </form>\r\n          </RightContent>\r\n        </SignUpContent>\r\n      </SignUpContainer>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}