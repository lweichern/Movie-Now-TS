{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React Course\\\\Project\\\\ReactWithTypescript\\\\MovieApp\\\\movies-app\\\\src\\\\Components\\\\MovieDetails\\\\MovieDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport API_Details from \"../../API_Details\";\nimport Header from \"../MoviesPage/Header/Header\";\nimport { Container } from \"../../Styles/CommonStyles/Container\";\nimport Grid from \"../Common/Grid/Grid\";\nimport Carousel from \"../HomePage/Carousel/Carousel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovieDetails() {\n  _s();\n\n  const [movie, setMovie] = useState();\n  const [movieCredits, setMovieCredits] = useState();\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\n  const {\n    movieId\n  } = useParams();\n  useEffect(() => {\n    fetchMovie();\n    fetchMovieCredits();\n  }, []);\n  useEffect(() => {\n    fetchSimilarMovies();\n  }, [movieId]);\n  console.log(recommendedMovies);\n\n  const fetchMovie = async () => {\n    try {\n      const movie = await API_Details.fetchMovie(movieId);\n      setMovie(movie);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchMovieCredits = async () => {\n    try {\n      const movie = await API_Details.fetchMovieCredits(movieId);\n      setMovieCredits(movie);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchSimilarMovies = async () => {\n    const recommendedMovies = await API_Details.fetchSimilarMovies(movieId);\n    setRecommendedMovies(recommendedMovies.results);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [movie && /*#__PURE__*/_jsxDEV(Header, {\n      headerMovie: movie,\n      genreList: movie.genres\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        headerTitle: \"Actors\",\n        castList: movieCredits\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), recommendedMovies.length !== 0 && /*#__PURE__*/_jsxDEV(Carousel, {\n        carouselTitle: \"Recommended Movies\",\n        movieList: recommendedMovies,\n        autoplay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieDetails, \"cj2goH1obl4iyWzxNfJ/y+BqPTo=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/ReactWithTypescript/MovieApp/movies-app/src/Components/MovieDetails/MovieDetails.tsx"],"names":["React","useEffect","useState","useParams","API_Details","Header","Container","Grid","Carousel","MovieDetails","movie","setMovie","movieCredits","setMovieCredits","recommendedMovies","setRecommendedMovies","movieId","fetchMovie","fetchMovieCredits","fetchSimilarMovies","console","log","error","results","genres","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,QAAP,MAAqB,+BAArB;;AAGA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,EAAlC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;AACA,QAAM,CAACY,iBAAD,EAAoBC,oBAApB,IAA4Cb,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAM;AAAEc,IAAAA;AAAF,MAAcb,SAAS,EAA7B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,UAAU;AACVC,IAAAA,iBAAiB;AAClB,GAHQ,EAGN,EAHM,CAAT;AAKAjB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,kBAAkB;AACnB,GAFQ,EAEN,CAACH,OAAD,CAFM,CAAT;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAYP,iBAAZ;;AAEA,QAAMG,UAAU,GAAG,YAAY;AAC7B,QAAI;AACF,YAAMP,KAAK,GAAG,MAAMN,WAAW,CAACa,UAAZ,CAAuBD,OAAvB,CAApB;AACAL,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAHD,CAGE,OAAOY,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,GAPD;;AASA,QAAMJ,iBAAiB,GAAG,YAAY;AACpC,QAAI;AACF,YAAMR,KAAK,GAAG,MAAMN,WAAW,CAACc,iBAAZ,CAA8BF,OAA9B,CAApB;AACAH,MAAAA,eAAe,CAACH,KAAD,CAAf;AACD,KAHD,CAGE,OAAOY,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,GAPD;;AASA,QAAMH,kBAAkB,GAAG,YAAY;AACrC,UAAML,iBAAiB,GAAG,MAAMV,WAAW,CAACe,kBAAZ,CAC9BH,OAD8B,CAAhC;AAGAD,IAAAA,oBAAoB,CAACD,iBAAiB,CAACS,OAAnB,CAApB;AACD,GALD;;AAOA,sBACE;AAAA,eACGb,KAAK,iBAAI,QAAC,MAAD;AAAQ,MAAA,WAAW,EAAEA,KAArB;AAA4B,MAAA,SAAS,EAAEA,KAAK,CAACc;AAA7C;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE,QAAC,SAAD;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,WAAW,EAAC,QAAlB;AAA2B,QAAA,QAAQ,EAAEZ;AAArC;AAAA;AAAA;AAAA;AAAA,cADF,EAEGE,iBAAiB,CAACW,MAAlB,KAA6B,CAA7B,iBACC,QAAC,QAAD;AACE,QAAA,aAAa,EAAC,oBADhB;AAEE,QAAA,SAAS,EAAEX,iBAFb;AAGE,QAAA,QAAQ,EAAE;AAHZ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA1DuBL,Y;UAKFN,S;;;KALEM,Y","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API_Details from \"../../API_Details\";\r\nimport Header from \"../MoviesPage/Header/Header\";\r\nimport { Container } from \"../../Styles/CommonStyles/Container\";\r\nimport Grid from \"../Common/Grid/Grid\";\r\nimport Carousel from \"../HomePage/Carousel/Carousel\";\r\nimport { MovieState } from \"../../Pages/Home\";\r\n\r\nexport default function MovieDetails() {\r\n  const [movie, setMovie] = useState<MovieState>();\r\n  const [movieCredits, setMovieCredits] = useState();\r\n  const [recommendedMovies, setRecommendedMovies] = useState([]);\r\n\r\n  const { movieId } = useParams() as any;\r\n\r\n  useEffect(() => {\r\n    fetchMovie();\r\n    fetchMovieCredits();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchSimilarMovies();\r\n  }, [movieId]);\r\n\r\n  console.log(recommendedMovies);\r\n\r\n  const fetchMovie = async () => {\r\n    try {\r\n      const movie = await API_Details.fetchMovie(movieId as number);\r\n      setMovie(movie);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchMovieCredits = async () => {\r\n    try {\r\n      const movie = await API_Details.fetchMovieCredits(movieId as number);\r\n      setMovieCredits(movie);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchSimilarMovies = async () => {\r\n    const recommendedMovies = await API_Details.fetchSimilarMovies(\r\n      movieId as number\r\n    );\r\n    setRecommendedMovies(recommendedMovies.results);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {movie && <Header headerMovie={movie} genreList={movie.genres} />}\r\n      <Container>\r\n        <Grid headerTitle=\"Actors\" castList={movieCredits} />\r\n        {recommendedMovies.length !== 0 && (\r\n          <Carousel\r\n            carouselTitle=\"Recommended Movies\"\r\n            movieList={recommendedMovies}\r\n            autoplay={true}\r\n          />\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}