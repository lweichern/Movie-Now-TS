{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React Course\\\\Project\\\\ReactWithTypescript\\\\MovieApp\\\\movies-app\\\\src\\\\Pages\\\\Actors.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport API_Details from \"../API_Details\";\nimport { Container } from \"../Styles/CommonStyles/Container\";\nimport Header from \"../Components/ActorsPage/Header/Header\";\nimport Grid from \"../Components/Common/Grid/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Actor() {\n  _s();\n\n  const {\n    actorId\n  } = useParams();\n  const [movies, setMovies] = useState();\n  const [actor, setActor] = useState();\n  console.log(movies);\n  console.log(actor);\n  useEffect(() => {\n    fetchMoviesThatActorActsIn();\n    fetchActorDetails();\n  }, []);\n\n  const fetchMoviesThatActorActsIn = async () => {\n    try {\n      const movie = await API_Details.fetchMoviesThatActorActsIn(actorId);\n      setMovies(movie.cast);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const fetchActorDetails = async () => {\n    try {\n      const actorDetails = await API_Details.fetchActorDetails(actorId);\n      setActor(actorDetails);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: actor && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        actorDetails: actor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          headerTitle: `${actor.name} Movies`,\n          movieList: movies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(Actor, \"qMNBd1gEvvzJoC326whwjL/pKbc=\", false, function () {\n  return [useParams];\n});\n\n_c = Actor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actor\");","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/ReactWithTypescript/MovieApp/movies-app/src/Pages/Actors.tsx"],"names":["React","useEffect","useState","useParams","API_Details","Container","Header","Grid","Actor","actorId","movies","setMovies","actor","setActor","console","log","fetchMoviesThatActorActsIn","fetchActorDetails","movie","cast","error","actorDetails","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,IAAP,MAAiB,gCAAjB;;;AAIA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA7B;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,0BAA0B;AAC1BC,IAAAA,iBAAiB;AAClB,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMD,0BAA0B,GAAG,YAAY;AAC7C,QAAI;AACF,YAAME,KAAK,GAAG,MAAMd,WAAW,CAACY,0BAAZ,CAClBP,OADkB,CAApB;AAGAE,MAAAA,SAAS,CAACO,KAAK,CAACC,IAAP,CAAT;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD;AACF,GATD;;AAWA,QAAMH,iBAAiB,GAAG,YAAY;AACpC,QAAI;AACF,YAAMI,YAAY,GAAG,MAAMjB,WAAW,CAACa,iBAAZ,CACzBR,OADyB,CAA3B;AAGAI,MAAAA,QAAQ,CAACQ,YAAD,CAAR;AACD,KALD,CAKE,OAAOD,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD;AACF,GATD;;AAWA,sBACE;AAAA,cACGR,KAAK,iBACJ;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,SAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,WAAW,EAAG,GAAEA,KAAK,CAACU,IAAK,SAAjC;AAA2C,UAAA,SAAS,EAAEZ;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAFJ,mBADF;AAaD;;GAhDuBF,K;UACFL,S;;;KADEK,K","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport API_Details from \"../API_Details\";\r\nimport { Container } from \"../Styles/CommonStyles/Container\";\r\nimport Header from \"../Components/ActorsPage/Header/Header\";\r\nimport Grid from \"../Components/Common/Grid/Grid\";\r\nimport { CastState } from \"../Components/MoviesPage/Header/Header\";\r\nimport { MovieState } from \"./Home\";\r\n\r\nexport default function Actor() {\r\n  const { actorId } = useParams() as any;\r\n  const [movies, setMovies] = useState<MovieState[]>();\r\n  const [actor, setActor] = useState<CastState>();\r\n\r\n  console.log(movies);\r\n  console.log(actor);\r\n\r\n  useEffect(() => {\r\n    fetchMoviesThatActorActsIn();\r\n    fetchActorDetails();\r\n  }, []);\r\n\r\n  const fetchMoviesThatActorActsIn = async () => {\r\n    try {\r\n      const movie = await API_Details.fetchMoviesThatActorActsIn(\r\n        actorId as number\r\n      );\r\n      setMovies(movie.cast);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchActorDetails = async () => {\r\n    try {\r\n      const actorDetails = await API_Details.fetchActorDetails(\r\n        actorId as number\r\n      );\r\n      setActor(actorDetails);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {actor && (\r\n        <>\r\n          <Header actorDetails={actor} />\r\n\r\n          <Container>\r\n            <Grid headerTitle={`${actor.name} Movies`} movieList={movies} />\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}