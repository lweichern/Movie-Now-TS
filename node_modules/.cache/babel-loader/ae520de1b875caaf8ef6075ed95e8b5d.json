{"ast":null,"code":"import _toConsumableArray from\"D:/Web Dev/React Course/Project/MovieNow-TS/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"D:/Web Dev/React Course/Project/MovieNow-TS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/Web Dev/React Course/Project/MovieNow-TS/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\Web Dev\\\\React Course\\\\Project\\\\MovieNow-TS\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import{useParams}from\"react-router-dom\";import{useTheme}from\"styled-components\";import api_details from\"../../../API_Details\";import{Container}from\"../../../Styles/CommonStyles/Container\";import Spinner from\"../../Common/Spinner/Spinner\";import Header from\"../Header/Header\";import{ButtonContainer,LoadMoreBtn}from\"./Genre.styled\";import Grid from\"../../Common/Grid/Grid\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Genre(){var theme=useTheme();var _ref=useParams(),genre=_ref.genre;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),genres=_useState4[0],setGenres=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),genreTitle=_useState6[0],setGenreTitle=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),page=_useState8[0],setPage=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),spinner=_useState10[0],setSpinner=_useState10[1];useEffect(function(){fetchAllGenre();},[]);useEffect(function(){setTimeout(function(){fetchPopularMovieByGenre();setSpinner(false);},500);},[page]);useEffect(function(){genres.map(function(item){if(item.id===parseInt(genre)){setGenreTitle(item.name);}});});var fetchPopularMovieByGenre=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var movie;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return api_details.fetchPopularMovieByGenre(genre,page);case 3:movie=_context.sent;setMovies(function(prevMovies){return(// convert movie.results from an object to an array\npage>1?[].concat(_toConsumableArray(prevMovies),_toConsumableArray(movie.results)):_toConsumableArray(movie.results));});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchPopularMovieByGenre(){return _ref2.apply(this,arguments);};}();var fetchAllGenre=function fetchAllGenre(){fetch(api_details.ALL_GENRES_URL).then(function(res){return res.json();}).then(function(data){return setGenres(data.genres);}).catch(function(err){return console.log(err);});};var handlePageIncrement=function handlePageIncrement(){setPage(function(prev){return prev+1;});setSpinner(true);};return/*#__PURE__*/_jsxs(_Fragment,{children:[movies.length!==0&&/*#__PURE__*/_jsx(Header,{headerMovie:movies[0]}),/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Grid,{headerTitle:\"Popular \".concat(genreTitle,\" Movie\"),movieList:movies}),/*#__PURE__*/_jsx(ButtonContainer,{children:!spinner?/*#__PURE__*/_jsx(LoadMoreBtn,{initial:{scale:1,background:theme.colors.content1},whileHover:{scale:1.04,background:\"#9d1231\"},onClick:handlePageIncrement,children:\"Load More\"}):/*#__PURE__*/_jsx(Spinner,{})})]})]});}","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/MovieNow-TS/src/Components/MoviesPage/Genre/Genre.tsx"],"names":["React","useEffect","useState","useParams","useTheme","api_details","Container","Spinner","Header","ButtonContainer","LoadMoreBtn","Grid","Genre","theme","genre","movies","setMovies","genres","setGenres","genreTitle","setGenreTitle","page","setPage","spinner","setSpinner","fetchAllGenre","setTimeout","fetchPopularMovieByGenre","map","item","id","parseInt","name","movie","prevMovies","results","console","log","fetch","ALL_GENRES_URL","then","res","json","data","catch","err","handlePageIncrement","prev","length","scale","background","colors","content1"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useTheme } from \"styled-components\";\r\nimport api_details from \"../../../API_Details\";\r\nimport { Container } from \"../../../Styles/CommonStyles/Container\";\r\nimport { Flex } from \"../../../Styles/CommonStyles/Flex.styled\";\r\nimport Spinner from \"../../Common/Spinner/Spinner\";\r\nimport Header from \"../Header/Header\";\r\nimport MovieCards from \"../MovieCards/MovieCards\";\r\nimport { ButtonContainer, GenreTitle, LoadMoreBtn } from \"./Genre.styled\";\r\nimport Grid from \"../../Common/Grid/Grid\";\r\nimport { GenreState, MovieState } from \"../../../Pages/Home\";\r\n\r\nexport default function Genre() {\r\n  const theme = useTheme();\r\n  const { genre } = useParams() as any;\r\n  const [movies, setMovies] = useState<MovieState[]>([]);\r\n  const [genres, setGenres] = useState<GenreState[]>([]);\r\n  const [genreTitle, setGenreTitle] = useState<string>(\"\");\r\n  const [page, setPage] = useState<number>(1);\r\n  const [spinner, setSpinner] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    fetchAllGenre();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetchPopularMovieByGenre();\r\n      setSpinner(false);\r\n    }, 500);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    genres.map((item: GenreState) => {\r\n      if (item.id === parseInt(genre!)) {\r\n        setGenreTitle(item.name);\r\n      }\r\n    });\r\n  });\r\n\r\n  const fetchPopularMovieByGenre = async () => {\r\n    try {\r\n      const movie = await api_details.fetchPopularMovieByGenre(\r\n        genre as number,\r\n        page\r\n      );\r\n\r\n      setMovies((prevMovies: MovieState[]) =>\r\n        // convert movie.results from an object to an array\r\n        page > 1 ? [...prevMovies, ...movie.results] : [...movie.results]\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const fetchAllGenre = () => {\r\n    fetch(api_details.ALL_GENRES_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => setGenres(data.genres))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handlePageIncrement = () => {\r\n    setPage((prev) => prev + 1);\r\n    setSpinner(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {movies.length !== 0 && <Header headerMovie={movies[0]} />}\r\n      <Container>\r\n        <Grid headerTitle={`Popular ${genreTitle} Movie`} movieList={movies} />\r\n        <ButtonContainer>\r\n          {!spinner ? (\r\n            <LoadMoreBtn\r\n              initial={{ scale: 1, background: (theme as any).colors.content1 }}\r\n              whileHover={{ scale: 1.04, background: \"#9d1231\" }}\r\n              onClick={handlePageIncrement}\r\n            >\r\n              Load More\r\n            </LoadMoreBtn>\r\n          ) : (\r\n            <Spinner></Spinner>\r\n          )}\r\n        </ButtonContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}