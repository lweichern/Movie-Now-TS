{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React Course\\\\Project\\\\ReactWithTypescript\\\\MovieApp\\\\movies-app\\\\src\\\\Components\\\\HomePage\\\\Favorites\\\\Favorites.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport API_DETAILS from \"../../../API_Details\";\nimport Grid from \"../../Common/Grid/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Favorites() {\n  _s();\n\n  const [movieList, setMovieList] = useState([]);\n  const movieIdList = JSON.parse(window.localStorage.getItem(\"user\")) !== null ? JSON.parse(window.localStorage.getItem(\"user\")).favoriteMovies : [];\n  console.log(movieIdList);\n  console.log(movieList);\n  useEffect(() => {\n    movieIdList.map(item => {\n      fetchMovieBasedOnMovieId(item);\n    });\n  }, []);\n\n  const fetchMovieBasedOnMovieId = async movieId => {\n    try {\n      const movie = await API_DETAILS.fetchMovie(movieId);\n      console.log(movieList);\n      setMovieList(prevMovieList => [...prevMovieList, movie]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movieIdList !== null ? movieList.length !== 0 && /*#__PURE__*/_jsxDEV(Grid, {\n      movieList: movieList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Please Login to add favorite movies.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Favorites, \"bwhYmfNZu0Jsio3To6kJ5dYB+b0=\");\n\n_c = Favorites;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favorites\");","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/ReactWithTypescript/MovieApp/movies-app/src/Components/HomePage/Favorites/Favorites.tsx"],"names":["React","useEffect","useState","API_DETAILS","Grid","Favorites","movieList","setMovieList","movieIdList","JSON","parse","window","localStorage","getItem","favoriteMovies","console","log","map","item","fetchMovieBasedOnMovieId","movieId","movie","fetchMovie","prevMovieList","error","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAe,EAAf,CAA1C;AAEA,QAAMM,WAAW,GACfC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAX,MAAqD,IAArD,GACIJ,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAX,EAAiDC,cADrD,GAEI,EAHN;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,WAAW,CAACS,GAAZ,CAAiBC,IAAD,IAAkB;AAChCC,MAAAA,wBAAwB,CAACD,IAAD,CAAxB;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,wBAAwB,GAAG,MAAOC,OAAP,IAA2B;AAC1D,QAAI;AACF,YAAMC,KAAK,GAAG,MAAMlB,WAAW,CAACmB,UAAZ,CAAuBF,OAAvB,CAApB;AAEAL,MAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AAEAC,MAAAA,YAAY,CAAEgB,aAAD,IAAmB,CAAC,GAAGA,aAAJ,EAAmBF,KAAnB,CAApB,CAAZ;AACD,KAND,CAME,OAAOG,KAAP,EAAc;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD;AACF,GAVD;;AAYA,sBACE;AAAA,cACGhB,WAAW,KAAK,IAAhB,GACCF,SAAS,CAACmB,MAAV,KAAqB,CAArB,iBAA0B,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEnB;AAAjB;AAAA;AAAA;AAAA;AAAA,YAD3B,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAtCuBD,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport API_DETAILS from \"../../../API_Details\";\r\nimport Grid from \"../../Common/Grid/Grid\";\r\nimport { MovieState } from \"../../../Pages/Home\";\r\n\r\nexport default function Favorites() {\r\n  const [movieList, setMovieList] = useState<MovieState[]>([]);\r\n\r\n  const movieIdList =\r\n    JSON.parse(window.localStorage.getItem(\"user\")!) !== null\r\n      ? JSON.parse(window.localStorage.getItem(\"user\")!).favoriteMovies\r\n      : [];\r\n\r\n  console.log(movieIdList);\r\n  console.log(movieList);\r\n\r\n  useEffect(() => {\r\n    movieIdList.map((item: number) => {\r\n      fetchMovieBasedOnMovieId(item);\r\n    });\r\n  }, []);\r\n\r\n  const fetchMovieBasedOnMovieId = async (movieId: number) => {\r\n    try {\r\n      const movie = await API_DETAILS.fetchMovie(movieId);\r\n\r\n      console.log(movieList);\r\n\r\n      setMovieList((prevMovieList) => [...prevMovieList, movie]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {movieIdList !== null ? (\r\n        movieList.length !== 0 && <Grid movieList={movieList} />\r\n      ) : (\r\n        <h3>Please Login to add favorite movies.</h3>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}