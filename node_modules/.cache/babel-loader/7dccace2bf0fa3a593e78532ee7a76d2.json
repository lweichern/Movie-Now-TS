{"ast":null,"code":"import _slicedToArray from\"D:/Web Dev/React Course/Project/MovieNow-TS/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{Card,CardImage,MovieRatings,MovieTitle,MovieDetails,OuterCard}from\"../MovieCards/MovieCards.styled\";import API_Details from\"../../../API_Details\";import{Link}from\"react-router-dom\";import NoImage from\"../../../Images/no_image.jpg\";import{AiFillHeart,AiOutlineHeart}from\"react-icons/ai\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MovieCards=function MovieCards(_ref){var movie=_ref.movie;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),genreList=_useState2[0],setGenreList=_useState2[1];var _useState3=useState(window.location.href),_useState4=_slicedToArray(_useState3,2),url=_useState4[0],setUrl=_useState4[1];useEffect(function(){fetchAllGenre();},[]);var fetchAllGenre=function fetchAllGenre(){fetch(API_Details.ALL_GENRES_URL).then(function(res){return res.json();}).then(function(data){return setGenreList(data.genres);}).catch(function(err){return console.log(err);});};var currentUser=JSON.parse(window.localStorage.getItem(\"user\"));var cardVariants={rest:{scale:1,y:50,opacity:0},hover:{scale:1.02,transition:{duration:0.2}},show:{y:0,opacity:1,transition:{duration:0.4,type:\"tween\",ease:\"easeOut\"}}};var toggleFavorite=function toggleFavorite(e){var currentUser=JSON.parse(window.localStorage.getItem(\"user\"));var favoriteMoviesArray=currentUser.favoriteMovies;if(!favoriteMoviesArray.includes(movie.id)){favoriteMoviesArray.push(movie.id);window.localStorage.setItem(\"user\",JSON.stringify({email:currentUser.email,username:currentUser.username,password:currentUser.password,favoriteMovies:favoriteMoviesArray}));}else{var filteredFavoriteMovies=favoriteMoviesArray.filter(function(item){return item!==movie.id;});window.localStorage.setItem(\"user\",JSON.stringify({email:currentUser.email,username:currentUser.username,password:currentUser.password,favoriteMovies:filteredFavoriteMovies}));}var allUsers=JSON.parse(window.localStorage.getItem(\"users\"));var getCurrentUsers=allUsers.find(function(item){return currentUser;});};return/*#__PURE__*/_jsx(OuterCard,{children:/*#__PURE__*/_jsxs(Card,{variants:cardVariants,initial:\"rest\",whileHover:\"hover\",whileInView:\"show\",layout:true,children:[/*#__PURE__*/_jsx(Link,{to:\"/movies/movie-details/\".concat(movie.id),children:/*#__PURE__*/_jsx(CardImage,{src:movie.poster_path!==null?\"\".concat(API_Details.IMAGE_BASE_URL).concat(API_Details.POSTER_SIZE).concat(movie.poster_path):NoImage,alt:\"\".concat(movie.title,\" poster image\"),loading:\"lazy\"})}),/*#__PURE__*/_jsx(MovieRatings,{children:movie.vote_average}),/*#__PURE__*/_jsxs(MovieDetails,{children:[/*#__PURE__*/_jsx(MovieTitle,{children:movie.title}),currentUser==null?/*#__PURE__*/_jsx(AiOutlineHeart,{className:\"heart-icon\",onClick:toggleFavorite}):currentUser.favoriteMovies.includes(movie.id)?/*#__PURE__*/_jsx(AiFillHeart,{className:\"heart-icon\",onClick:toggleFavorite}):/*#__PURE__*/_jsx(AiOutlineHeart,{className:\"heart-icon\",onClick:toggleFavorite})]})]})});};export default MovieCards;","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/MovieNow-TS/src/Components/MoviesPage/MovieCards/MovieCards.tsx"],"names":["React","useEffect","useState","Card","CardImage","MovieRatings","MovieTitle","MovieDetails","OuterCard","API_Details","Link","NoImage","AiFillHeart","AiOutlineHeart","MovieCards","movie","genreList","setGenreList","window","location","href","url","setUrl","fetchAllGenre","fetch","ALL_GENRES_URL","then","res","json","data","genres","catch","err","console","log","currentUser","JSON","parse","localStorage","getItem","cardVariants","rest","scale","y","opacity","hover","transition","duration","show","type","ease","toggleFavorite","e","favoriteMoviesArray","favoriteMovies","includes","id","push","setItem","stringify","email","username","password","filteredFavoriteMovies","filter","item","allUsers","getCurrentUsers","find","poster_path","IMAGE_BASE_URL","POSTER_SIZE","title","vote_average"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImage,\r\n  MovieRatings,\r\n  MovieTitle,\r\n  MovieDetails,\r\n  MovieGenreContainer,\r\n  MovieGenre,\r\n  OuterCard,\r\n} from \"../MovieCards/MovieCards.styled\";\r\nimport API_Details from \"../../../API_Details\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NoImage from \"../../../Images/no_image.jpg\";\r\nimport { motion } from \"framer-motion\";\r\nimport { AiFillHeart, AiOutlineHeart } from \"react-icons/ai\";\r\nimport { MovieState } from \"../../../Pages/Home\";\r\n\r\ntype IProps = {\r\n  movie: MovieState;\r\n};\r\n\r\nconst MovieCards: React.FC<IProps> = ({ movie }) => {\r\n  const [genreList, setGenreList] = useState([]);\r\n  const [url, setUrl] = useState(window.location.href);\r\n\r\n  useEffect(() => {\r\n    fetchAllGenre();\r\n  }, []);\r\n\r\n  const fetchAllGenre = () => {\r\n    fetch(API_Details.ALL_GENRES_URL)\r\n      .then((res) => res.json())\r\n      .then((data) => setGenreList(data.genres))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const currentUser = JSON.parse(window.localStorage.getItem(\"user\")!);\r\n\r\n  const cardVariants = {\r\n    rest: {\r\n      scale: 1,\r\n      y: 50,\r\n      opacity: 0,\r\n    },\r\n    hover: {\r\n      scale: 1.02,\r\n      transition: {\r\n        duration: 0.2,\r\n      },\r\n    },\r\n    show: {\r\n      y: 0,\r\n      opacity: 1,\r\n      transition: {\r\n        duration: 0.4,\r\n        type: \"tween\",\r\n        ease: \"easeOut\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const toggleFavorite = (e: React.MouseEvent<SVGElement>) => {\r\n    const currentUser = JSON.parse(window.localStorage.getItem(\"user\")!);\r\n\r\n    const favoriteMoviesArray = currentUser.favoriteMovies;\r\n\r\n    if (!favoriteMoviesArray.includes(movie.id)) {\r\n      favoriteMoviesArray.push(movie.id);\r\n\r\n      window.localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify({\r\n          email: currentUser.email,\r\n          username: currentUser.username,\r\n          password: currentUser.password,\r\n          favoriteMovies: favoriteMoviesArray,\r\n        })\r\n      );\r\n    } else {\r\n      const filteredFavoriteMovies = favoriteMoviesArray.filter(\r\n        (item: number) => item !== movie.id\r\n      );\r\n\r\n      window.localStorage.setItem(\r\n        \"user\",\r\n        JSON.stringify({\r\n          email: currentUser.email,\r\n          username: currentUser.username,\r\n          password: currentUser.password,\r\n          favoriteMovies: filteredFavoriteMovies,\r\n        })\r\n      );\r\n    }\r\n\r\n    const allUsers = JSON.parse(window.localStorage.getItem(\"users\")!);\r\n    const getCurrentUsers = allUsers.find((item: string) => currentUser);\r\n  };\r\n\r\n  return (\r\n    <OuterCard>\r\n      <Card\r\n        variants={cardVariants}\r\n        initial=\"rest\"\r\n        whileHover=\"hover\"\r\n        whileInView=\"show\"\r\n        layout\r\n      >\r\n        <Link to={`/movies/movie-details/${movie.id}`}>\r\n          <CardImage\r\n            src={\r\n              movie.poster_path !== null\r\n                ? `${API_Details.IMAGE_BASE_URL}${API_Details.POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            alt={`${movie.title} poster image`}\r\n            loading=\"lazy\"\r\n          />\r\n        </Link>\r\n\r\n        <MovieRatings>{movie.vote_average}</MovieRatings>\r\n        <MovieDetails>\r\n          <MovieTitle>{movie.title}</MovieTitle>\r\n\r\n          {currentUser == null ? (\r\n            <AiOutlineHeart className=\"heart-icon\" onClick={toggleFavorite} />\r\n          ) : currentUser.favoriteMovies.includes(movie.id) ? (\r\n            <AiFillHeart className=\"heart-icon\" onClick={toggleFavorite} />\r\n          ) : (\r\n            <AiOutlineHeart className=\"heart-icon\" onClick={toggleFavorite} />\r\n          )}\r\n        </MovieDetails>\r\n      </Card>\r\n    </OuterCard>\r\n  );\r\n};\r\n\r\nexport default MovieCards;\r\n"]},"metadata":{},"sourceType":"module"}