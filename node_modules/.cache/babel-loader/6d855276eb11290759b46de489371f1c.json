{"ast":null,"code":"import _toConsumableArray from\"D:/Web Dev/React Course/Project/MovieNow-TS/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"D:/Web Dev/React Course/Project/MovieNow-TS/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/Web Dev/React Course/Project/MovieNow-TS/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"D:\\\\Web Dev\\\\React Course\\\\Project\\\\MovieNow-TS\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import API_DETAILS from\"../../../API_Details\";import Grid from\"../../Common/Grid/Grid\";import{jsx as _jsx}from\"react/jsx-runtime\";var Favorites=function Favorites(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movieList=_useState2[0],setMovieList=_useState2[1];var movieIdList=JSON.parse(window.localStorage.getItem(\"user\"))!==null?JSON.parse(window.localStorage.getItem(\"user\")).favoriteMovies:[];console.log(movieIdList);useEffect(function(){movieIdList.map(function(item){fetchMovie(item);});},[]);var fetchMovie=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(movieId){var movie;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return API_DETAILS.fetchMovie(movieId);case 3:movie=_context.sent;setMovieList(function(prevMovieList){return[].concat(_toConsumableArray(prevMovieList),[movie]);});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function fetchMovie(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsx(\"div\",{children:movieIdList!==null?movieList.length!==0&&/*#__PURE__*/_jsx(Grid,{movieList:movieList}):/*#__PURE__*/_jsx(\"h3\",{children:\"Please Login to add favorite movies.\"})});};export default Favorites;","map":{"version":3,"sources":["D:/Web Dev/React Course/Project/MovieNow-TS/src/Components/HomePage/Favorites/Favorites.tsx"],"names":["React","useEffect","useState","API_DETAILS","Grid","Favorites","movieList","setMovieList","movieIdList","JSON","parse","window","localStorage","getItem","favoriteMovies","console","log","map","item","fetchMovie","movieId","movie","prevMovieList","length"],"mappings":"whBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,WAAP,KAAwB,sBAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,C,2CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,cAAkCH,QAAQ,CAAe,EAAf,CAA1C,wCAAOI,SAAP,eAAkBC,YAAlB,eAEA,GAAMC,CAAAA,WAAW,CACfC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAX,IAAqD,IAArD,CACIJ,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAX,EAAiDC,cADrD,CAEI,EAHN,CAKAC,OAAO,CAACC,GAAR,CAAYR,WAAZ,EAEAP,SAAS,CAAC,UAAM,CACdO,WAAW,CAACS,GAAZ,CAAgB,SAACC,IAAD,CAAkB,CAChCC,UAAU,CAACD,IAAD,CAAV,CACD,CAFD,EAGD,CAJQ,CAIN,EAJM,CAAT,CAMA,GAAMC,CAAAA,UAAU,0FAAG,iBAAOC,OAAP,kKAEiBjB,CAAAA,WAAW,CAACgB,UAAZ,CAAuBC,OAAvB,CAFjB,QAETC,KAFS,eAIfd,YAAY,CAAC,SAACe,aAAD,qCAAuBA,aAAvB,GAAsCD,KAAtC,IAAD,CAAZ,CAJe,+EAMfN,OAAO,CAACC,GAAR,cANe,oEAAH,kBAAVG,CAAAA,UAAU,4CAAhB,CAUA,mBACE,qBACGX,WAAW,GAAK,IAAhB,CACCF,SAAS,CAACiB,MAAV,GAAqB,CAArB,eAA0B,KAAC,IAAD,EAAM,SAAS,CAAEjB,SAAjB,EAD3B,cAGC,4DAJJ,EADF,CASD,CAnCD,CAqCA,cAAeD,CAAAA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport API_DETAILS from \"../../../API_Details\";\r\nimport Grid from \"../../Common/Grid/Grid\";\r\nimport { MovieState } from \"../../../Pages/Home\";\r\n\r\nconst Favorites = () => {\r\n  const [movieList, setMovieList] = useState<MovieState[]>([]);\r\n\r\n  const movieIdList =\r\n    JSON.parse(window.localStorage.getItem(\"user\")!) !== null\r\n      ? JSON.parse(window.localStorage.getItem(\"user\")!).favoriteMovies\r\n      : [];\r\n\r\n  console.log(movieIdList);\r\n\r\n  useEffect(() => {\r\n    movieIdList.map((item: number) => {\r\n      fetchMovie(item);\r\n    });\r\n  }, []);\r\n\r\n  const fetchMovie = async (movieId: number) => {\r\n    try {\r\n      const movie: MovieState = await API_DETAILS.fetchMovie(movieId);\r\n\r\n      setMovieList((prevMovieList) => [...prevMovieList, movie]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {movieIdList !== null ? (\r\n        movieList.length !== 0 && <Grid movieList={movieList} />\r\n      ) : (\r\n        <h3>Please Login to add favorite movies.</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favorites;\r\n"]},"metadata":{},"sourceType":"module"}